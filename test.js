var assert = require('assert');
_ = require('lodash');

function range(start, end) {
  return Array(end - start + 1).fill().map((_, idx) => start + idx)
}

// https://stackoverflow.com/questions/1431094/how-do-i-replace-a-character-at-a-particular-index-in-javascript
function replaceCharAt(string, index, char){
  if(index > string.length-1) return string;
  return string.substr(0,index) + char + string.substr(index+1);
}

// all_elements: The set within to constrain the map (an array of all possible elements)
//               This array must have unique values
// elements:     An array of ids within
//               It is not necessary that this array is unique
// returns a string where positions of elements  "10001010110100000...011"
function elements_to_bitmap_string(all_elements, elements) {
  bitmap_string = "0".repeat(all_elements.length)
  _.each(elements, function(element){
    index = all_elements.indexOf(element)
    if(index === -1) throw "Element " + element + " not found." // element not found
    bitmap_string = replaceCharAt(bitmap_string, index, "1")
  });
  return bitmap_string
}

function elements_to_bitmap(all_elements, elements) {
  return BigInt("0b" + elements_to_bitmap_string(all_elements, elements))
}

function test(){
  strBits1 = elements_to_bitmap_string([16,13,14,21,20,25,35,37,30], [13,14,16,25,30,37])
  assert.equal(strBits1, "111001011","Test 1 failed")
  console.log(strBits1)
  //assert(elements_to_bitmap_string([16,13,14,21,20,25,35,37,30], [13,14,16,25,30,37]), ,"Test 2 failed")
}

test() //validate

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
users_per_team = 5000
team_count = 3

users_in_teams_count = users_per_team*team_count
all_user_count = Math.round(users_in_teams_count*1) // Add 25% more users not in teams

user_ids = range(1,all_user_count)

team_collission_factor = 0 // 0 means no collision, increase the number as an integer to increase likelyhood of collission

number_of_layers = team_collission_factor + 1
// We iterate at least once to create the teams


layers = _.flatMap(range(1, number_of_layers),function(i){
  console.log("Creating team id layer "+ i)
  users_in_teams_ids = _.sampleSize(user_ids, users_in_teams_count)
  return _.chunk(users_in_teams_ids, users_per_team)
});


console.log("BEGIN - shuffled_layers")
shuffled_layers = _.shuffle(layers)
// console.log(shuffled_layers)
console.log("END   - shuffled_layers")

console.log("BEGIN - layer_stacks")
layer_stacks = _.chunk(layers, number_of_layers)
// console.log(layer_stacks)
console.log("END   - layer_stacks")

console.log("BEGIN - merged_stacks")
merged_stacks = _.map(layer_stacks, function(layer_stack){
  return _.sampleSize(_.uniq(_.flatten(layer_stack)), users_per_team)
});
// console.log(merged_stacks)
console.log("END   - merged_stacks")

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

teams = {} // 0: [88, 70, 98], 1: [45,32,13]

console.log("BEGIN - creating_team hashes {'team_1': [12,45,...]}")
merged_stacks.map(function(group, index){
  teams[`team_${index+1}`] = group
});
console.log("END -   creating_team hashes {'team_1': [12,45,...]}")
//console.log(user_ids_per_team)

team_bitmaps = {}
// all_users_bitmap = BigInt("0b" + "0".repeat(all_user_count))

console.log("BEGIN - creating_team bitmaps!")
_.each(teams, function(ids, team_id){
  // console.log("team_id: " + team_id)
  // console.log("ids: " + ids)
  team_bitmaps[team_id] = elements_to_bitmap(user_ids, ids)
});
console.log("END -   creating_team bitmaps!")
// console.log(team_bitmaps)

final = _.reduce(team_bitmaps, function(a, team_bitmap){
  return (a | team_bitmap)
},);

console.log(final)
console.log(final.toString(2))

// test_big_int = BigInt("0b
//
// console.log(test_big_int)
// console.log(test_big_int.toString(2))
